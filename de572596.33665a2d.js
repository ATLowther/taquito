(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{156:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(9),o=(a(0),a(169)),i={title:"Set delegate",author:"Simon Boissonneault-Robert"},c={id:"set_delegate",isDocsHomePage:!1,title:"Set delegate",description:"Examples demonstrating delegation for various address type",source:"@site/../docs/set_delegate.md",permalink:"/docs/set_delegate",sidebar:"docs",previous:{title:"Originating (Deploying) Contracts",permalink:"/docs/originate"},next:{title:"Working with Smart Contracts",permalink:"/docs/smartcontracts"}},s=[{value:"Delegate from an implicit tz1 address",id:"delegate-from-an-implicit-tz1-address",children:[]},{value:"Delegation involving &quot;originated&quot; KT1 addresses",id:"delegation-involving-originated-kt1-addresses",children:[{value:"Example of delegation for a KT1 on Carthage/Proto006",id:"example-of-delegation-for-a-kt1-on-carthageproto006",children:[]}]}],l={rightToc:s};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"examples-demonstrating-delegation-for-various-address-type"},"Examples demonstrating delegation for various address type"),Object(o.b)("p",null,"In Tezos a delegation operation will set the delegate of an address."),Object(o.b)("p",null,"When the ",Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005")," protocol amendment came into affect, it changed how delegation from KT1 addresses work. In order to set delegate for a KT1 account, the delegation must be completed by calling the KT1's smart contract ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method. The ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method takes a lambda function, and it is the logic of this function that causes the desired delegation to happen."),Object(o.b)("h2",{id:"delegate-from-an-implicit-tz1-address"},"Delegate from an implicit tz1 address"),Object(o.b)("p",null,"This is the simplest delegation scenario"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"await Tezos.contract.setDelegate({ source: 'tz1_source', delegate: 'tz1_baker' })\n")),Object(o.b)("p",null,"Register as a delegate"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"await Tezos.contract.registerDelegate({})\n")),Object(o.b)("h2",{id:"delegation-involving-originated-kt1-addresses"},'Delegation involving "originated" KT1 addresses'),Object(o.b)("p",null,"Pre-",Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005"),' it was common to have "script-less" KT1 addresses. This changed when the Tezos blockchain migrated to the new ',Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005")," protocol."),Object(o.b)("p",null,"During the migration form ",Object(o.b)("inlineCode",{parentName:"p"},"proto004")," to ",Object(o.b)("inlineCode",{parentName:"p"},"proto005")," all KT1 addresses were migrated so that they got a contract called ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://gitlab.com/nomadic-labs/mi-cho-coq/blob/master/src/contracts/manager.tz"}),"manager.tz"),'. This meant that there are no longer any "script-less" KT1 addresses in Tezos.'),Object(o.b)("p",null,"In order to delegate for a KT1 addresses with the new ",Object(o.b)("inlineCode",{parentName:"p"},"manager.tz")," contract, a call to the KT1's smart contract's ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method is required. The ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method takes a lambda function, and it is this lambda function that causes changes to occur in the KT1 address."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"The examples following only apply to KT1 addresses that were migrated as part of the ",Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005")," upgrade. Delegations involving ",Object(o.b)("em",{parentName:"p"},"other")," types of smart-contracts, will depend on those contracts specifically.")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Why doesn't Taquito abstract KT1 manager accounts so I can just call setDelegate()")),Object(o.b)("p",{parentName:"blockquote"},"For the time being, we regard KT1 manager accounts as a regular smart contract. In fact, it is possible to have a smart contract that is not following the manager.tz conventions and that also delegates to a baker. The correct lambda to pass to a contract in order to delegate is application/wallet specific. Therefore Taquito does not make any assumption on the KT1.")),Object(o.b)("h3",{id:"example-of-delegation-for-a-kt1-on-carthageproto006"},"Example of delegation for a KT1 on Carthage/Proto006"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'const contract = await Tezos.contract.at("kt1...")\nawait contract.methods.do(setDelegate("tz1_delegate")).send()\n')),Object(o.b)("p",null,"Where ",Object(o.b)("inlineCode",{parentName:"p"},"setDelegate")," is a function that returns the necessary Michelson lambda. It looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const setDelegate = (key: string) => {\n  return [\n    { prim: 'DROP' },\n    { prim: 'NIL', args: [{ prim: 'operation' }] },\n    {\n      prim: 'PUSH',\n      args: [{ prim: 'key_hash' }, { string: key }],\n    },\n    { prim: 'SOME' },\n    { prim: 'SET_DELEGATE' },\n    { prim: 'CONS' },\n  ];\n};\n")))}d.isMDXComponent=!0},169:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return g}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(a),m=n,g=p["".concat(i,".").concat(m)]||p[m]||b[m]||o;return a?r.a.createElement(g,c(c({ref:t},l),{},{components:a})):r.a.createElement(g,c({ref:t},l))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=a[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);