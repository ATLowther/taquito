(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{134:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"rightToc",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"default",(function(){return d}));var n=r(1),a=r(9),o=(r(0),r(145)),s={title:"Making Transfers",author:"Simon Boissonneault-Robert"},i=[{value:"Transfer from an implicit tz1 address to a tz1 address",id:"transfer-from-an-implicit-tz1-address-to-a-tz1-address",children:[]},{value:'Transfers involving "originated" KT1 addresses',id:"transfers-involving-originated-kt1-addresses",children:[]},{value:"Transfer 0.00005 (50 mutez) tokens from a KT1 address to a tz1 address",id:"transfer-000005-50-mutez-tokens-from-a-kt1-address-to-a-tz1-address",children:[{value:"Example transfer from a KT1 to a tz1 address on Athens/Proto004",id:"example-transfer-from-a-kt1-to-a-tz1-address-on-athensproto004",children:[]},{value:"Example transfer from a KT1 to a tz1 address on Babylon/Proto005",id:"example-transfer-from-a-kt1-to-a-tz1-address-on-babylonproto005",children:[]}]},{value:"Transfer 0.000001 (1 mutez) tokens from a KT1 address to a KT1 address",id:"transfer-0000001-1-mutez-tokens-from-a-kt1-address-to-a-kt1-address",children:[{value:"Example for Athens/Proto004",id:"example-for-athensproto004",children:[]},{value:"Example for Babylon/Proto005 or higher",id:"example-for-babylonproto005-or-higher",children:[]}]}],c={id:"making_transfers",title:"Making Transfers",description:"# Examples demonstrating transfers between various address types",source:"@site/../docs/making_transfers.md",permalink:"/docs/making_transfers",sidebar:"docs",previous:{title:"Taquito boilerplate",permalink:"/docs/boilerplate"},next:{title:"Originating Contracts",permalink:"/docs/originate"}},p={rightToc:i,metadata:c},l="wrapper";function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)(l,Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"examples-demonstrating-transfers-between-various-address-types"},"Examples demonstrating transfers between various address types"),Object(o.b)("p",null,"In Tezos a transfer operation will transfer tokens between two addresses."),Object(o.b)("p",null,"When the ",Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005")," protocol amendment came into affect, it changed how token transfer involving KT1 addresses work. In order to transfer tokens ",Object(o.b)("em",{parentName:"p"},"from")," a KT1 account, the transfer must be completed by calling the KT1's smart contract ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method. The ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method takes a lambda function, and it is the logic of this function that causes the desired transfer of tokens to happen."),Object(o.b)("p",null,"The Taquito ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/ecadlabs/taquito/blob/master/integration-tests/manager-contract-scenario.spec.ts"}),"integration tests")," can be useful to see how this works."),Object(o.b)("h2",{id:"transfer-from-an-implicit-tz1-address-to-a-tz1-address"},"Transfer from an implicit tz1 address to a tz1 address"),Object(o.b)("p",null,"This is the simplest token transfer scenario"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"await Tezos.contract.transfer({ to: contract.address, amount: 1 })\n")),Object(o.b)("h2",{id:"transfers-involving-originated-kt1-addresses"},'Transfers involving "originated" KT1 addresses'),Object(o.b)("p",null,"Pre-",Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005"),' it was common to have "script-less" KT1 addresses. This changed when the Tezos blockchain migrated to the new ',Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005")," protocol."),Object(o.b)("p",null,"During the migration form ",Object(o.b)("inlineCode",{parentName:"p"},"proto004")," to ",Object(o.b)("inlineCode",{parentName:"p"},"proto005")," all KT1 addresses were migrated so that they got a contract called ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://gitlab.com/nomadic-labs/mi-cho-coq/blob/master/src/contracts/manager.tz"}),"manager.tz"),'. This meant that there are no longer any "script-less" KT1 addresses in Tezos.'),Object(o.b)("p",null,"In order to transfer tokens from a KT1 addresses with the new ",Object(o.b)("inlineCode",{parentName:"p"},"manager.tz")," contract, a call to the KT1's smart contract's ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method is required. The ",Object(o.b)("inlineCode",{parentName:"p"},"do")," method takes a lambda function, and it is this lambda function that causes changes to occur in the KT1 address."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"The examples following only apply to KT1 addresses that were migrated as part of the ",Object(o.b)("inlineCode",{parentName:"p"},"Babylon/proto005")," upgrade. Transfers involving ",Object(o.b)("em",{parentName:"p"},"other")," types of smart-contracts, will depend on those contracts specifically.")),Object(o.b)("h2",{id:"transfer-000005-50-mutez-tokens-from-a-kt1-address-to-a-tz1-address"},"Transfer 0.00005 (50 mutez) tokens from a KT1 address to a tz1 address"),Object(o.b)("p",null,"Sending 50 mutez to ",Object(o.b)("inlineCode",{parentName:"p"},"tz1eY5Aqa1kXDFoiebL28emyXFoneAoVg1zh")," from ",Object(o.b)("inlineCode",{parentName:"p"},"kt1...")),Object(o.b)("h3",{id:"example-transfer-from-a-kt1-to-a-tz1-address-on-athensproto004"},"Example transfer from a KT1 to a tz1 address on Athens/Proto004"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"await Tezos.contract.transfer({ to: 'tz1eY5Aqa1kXDFoiebL28emyXFoneAoVg1zh', source: 'kt1...', amount: 0.000050 })\n")),Object(o.b)("h3",{id:"example-transfer-from-a-kt1-to-a-tz1-address-on-babylonproto005"},"Example transfer from a KT1 to a tz1 address on Babylon/Proto005"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'const contract = await Tezos.contract.at("kt1...")\nawait contract.methods.do(transferImplicit("tz1eY5Aqa1kXDFoiebL28emyXFoneAoVg1zh", 50)).send({ amount: 0 })\n')),Object(o.b)("p",null,"Where ",Object(o.b)("inlineCode",{parentName:"p"},"transferImplicit")," is a function that returns the necessary Michelson lambda. It looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'export const transferImplicit = (key: string, mutez: number) => {\n    return [{ "prim": "DROP" },\n    { "prim": "NIL", "args": [{ "prim": "operation" }] },\n    {\n        "prim": "PUSH",\n        "args":\n            [{ "prim": "key_hash" },\n            { "string": key }]\n    },\n    { "prim": "IMPLICIT_ACCOUNT" },\n    {\n        "prim": "PUSH",\n        "args": [{ "prim": "mutez" }, { "int": `${mutez}` }]\n    },\n    { "prim": "UNIT" }, { "prim": "TRANSFER_TOKENS" },\n    { "prim": "CONS" }]\n}\n')),Object(o.b)("h2",{id:"transfer-0000001-1-mutez-tokens-from-a-kt1-address-to-a-kt1-address"},"Transfer 0.000001 (1 mutez) tokens from a KT1 address to a KT1 address"),Object(o.b)("p",null,"Sending 1 mutez to ",Object(o.b)("inlineCode",{parentName:"p"},"KT1EM2LvxxFGB3Svh9p9HCP2jEEYyHjABMbK")," from ",Object(o.b)("inlineCode",{parentName:"p"},"KT1...")),Object(o.b)("h3",{id:"example-for-athensproto004"},"Example for Athens/Proto004"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"await Tezos.contract.transfer({ to: 'KT1EM2LvxxFGB3Svh9p9HCP2jEEYyHjABMbK', source: 'KT1...', amount: 0.000001 })\n")),Object(o.b)("h3",{id:"example-for-babylonproto005-or-higher"},"Example for Babylon/Proto005 or higher"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'const contract = await Tezos.contract.at("KT1...")\nawait contract.methods.do(transferToContract("KT1EM2LvxxFGB3Svh9p9HCP2jEEYyHjABMbK", 1)).send({ amount: 0 })\n')),Object(o.b)("p",null,"Where ",Object(o.b)("inlineCode",{parentName:"p"},"transferToContract")," is a function that looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'export const transferToContract = (key: string, amount: number) => {\n    return [{ "prim": "DROP" },\n    { "prim": "NIL", "args": [{ "prim": "operation" }] },\n    {\n        "prim": "PUSH",\n        "args":\n            [{ "prim": "address" },\n            { "string": key }]\n    },\n    { "prim": "CONTRACT", "args": [{ "prim": "unit" }] },\n    [{\n        "prim": "IF_NONE",\n        "args":\n            [[[{ "prim": "UNIT" }, { "prim": "FAILWITH" }]],\n            []]\n    }],\n    {\n        "prim": "PUSH",\n        "args": [{ "prim": "mutez" }, { "int": `${amount}` }]\n    },\n    { "prim": "UNIT" }, { "prim": "TRANSFER_TOKENS" },\n    { "prim": "CONS" }]\n}\n')))}d.isMDXComponent=!0},145:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i({},t,{},e)),r},d=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,u=d["".concat(s,".").concat(m)]||d[m]||b[m]||o;return r?a.a.createElement(u,i({ref:t},p,{components:r})):a.a.createElement(u,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);