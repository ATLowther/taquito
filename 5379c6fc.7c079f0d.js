(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{144:function(n,r,e){"use strict";e.r(r),e.d(r,"frontMatter",(function(){return o})),e.d(r,"metadata",(function(){return p})),e.d(r,"rightToc",(function(){return s})),e.d(r,"default",(function(){return c}));var t=e(2),i=e(9),a=(e(0),e(160)),o={title:"Originating Contracts",author:"Simon Boissonneault-Robert"},p={id:"originate",title:"Originating Contracts",description:"Taquito can be used to originate smart contracts on to the Tezos blockchain.",source:"@site/../docs/originate.md",permalink:"/docs/originate",sidebar:"docs",previous:{title:"Making Transfers",permalink:"/docs/making_transfers"},next:{title:"Set delegate",permalink:"/docs/set_delegate"}},s=[{value:"Example demonstrating origination of a Multi sig contract",id:"example-demonstrating-origination-of-a-multi-sig-contract",children:[{value:"Convert the generic.tz contract to JSON",id:"convert-the-generictz-contract-to-json",children:[]}]},{value:"Originate the contract using Taquito",id:"originate-the-contract-using-taquito",children:[{value:"a. Using the storage encoder feature",id:"a-using-the-storage-encoder-feature",children:[]},{value:"b. Using the JSON storage",id:"b-using-the-json-storage",children:[]}]}],m={rightToc:s};function c(n){var r=n.components,e=Object(i.a)(n,["components"]);return Object(a.b)("wrapper",Object(t.a)({},m,e,{components:r,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Taquito can be used to ",Object(a.b)("em",{parentName:"p"},"originate")," smart contracts on to the Tezos blockchain."),Object(a.b)("h2",{id:"example-demonstrating-origination-of-a-multi-sig-contract"},"Example demonstrating origination of a Multi sig contract"),Object(a.b)("p",null,"In this example we will originate the popular mutli-sig contract that is available here:"),Object(a.b)("p",null,Object(a.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/murbard/smart-contracts/blob/master/multisig/michelson/generic.tz"}),"https://github.com/murbard/smart-contracts/blob/master/multisig/michelson/generic.tz")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Note! Due to a temporary limitation of Taquito we do not fully support raw michelson and need an external step to convert it to JSON. See ",Object(a.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/ecadlabs/taquito/issues/100"}),"https://github.com/ecadlabs/taquito/issues/100"))),Object(a.b)("h3",{id:"convert-the-generictz-contract-to-json"},"Convert the generic.tz contract to JSON"),Object(a.b)("p",null,"We can use the tezos-client to convert our michelson to the its JSON representation using the following command. This command relies on two files ",Object(a.b)("inlineCode",{parentName:"p"},"generic.tz")," and ",Object(a.b)("inlineCode",{parentName:"p"},"init.tz")," that must be present in your current working directory. Download the ",Object(a.b)("inlineCode",{parentName:"p"},"generic.tz")," from the above link, and see below for the contents of ",Object(a.b)("inlineCode",{parentName:"p"},"init.tz")),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),'tezos-client originate contract generic-multisig transferring 1 from \\\n   account1 running "$(cat ./generic.tz)" --init "$(cat ./init.tz)" \\\n   --dry-run --verbose-signing --burn-cap 2`\n')),Object(a.b)("p",null,"Example of init.tz"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-michelson"}),' Pair 0 (Pair 1 {"edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t"})\n')),Object(a.b)("p",null,"The output of the command should look something like this;"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-txt"}),'Waiting for the node to be bootstrapped before injection...\nCurrent head: BLbR9F8P1uPp (timestamp: 2019-12-05T13:35:04-00:00, validation: 2019-12-05T13:36:24-00:00)\nNode is bootstrapped, ready for injecting operations.\nEstimated gas: 32518 units (will add 100 for safety)\nEstimated storage: 1213 bytes added (will add 20 for safety)\nPre-signature information (verbose signing):\n    * Branch: BLbR9F8P1uPpUyoKHA79M15AzeEWnJWApmr61vRGPku3BY8bi4E\n    * Watermark: `Generic-operation` (0x03)\n    * Operation bytes: {...}\n    * Blake 2B Hash (raw): DAWCcNTfcQQ3bn1HbWj3gLT6A3wmJFLTCGrBqKaYZxLt\n    * Blake 2B Hash (ledger-style, with operation watermark):\n    9GFhQdGYig9bof5CBBRJdgjKimSJKVrtAKeCg6ioFHxo\n    * JSON encoding:\n        { "branch": "BLbR9F8P1uPpUyoKHA79M15AzeEWnJWApmr61vRGPku3BY8bi4E",\n          "contents":\n            [ { "kind": "origination",\n                "source": "tz1QZ6KY7d3BuZDT1d19dUxoQrtFPN2QJ3hn", "fee": "4471",\n                "counter": "25184", "gas_limit": "32618",\n                "storage_limit": "1233", "balance": "1000000",\n                "script":\n                  { "code":\n                      [ { "prim": "parameter",\n                          "args":\n                            [ { "prim": "or",\n                                "args":\n                                  [ { "prim": "unit", "annots": [ "%default" ] },\n                                    { "prim": "pair",\n                                      "args":\n                                        [ { "prim": "pair",\n                                            "args":\n                                              [ { "prim": "nat",\n                                                  "annots": [ "%counter" ] },\n                                                { "prim": "or",\n                                                  "args":\n                                                    [ { "prim": "lambda",\n                                                        "args":\n                                                          [ { "prim": "unit" },\n                                                            { "prim": "list",\n                                                              "args":\n                                                                [ { "prim":\n                                                                      "operation" } ] } ],\n                                                        "annots":\n                                                          [ "%operation" ] },\n                                                      { "prim": "pair",\n                                                        "args":\n                                                          [ { "prim": "nat",\n                                                              "annots":\n                                                                [ "%threshold" ] },\n                                                            { "prim": "list",\n                                                              "args":\n                                                                [ { "prim": "key" } ],\n                                                              "annots":\n                                                                [ "%keys" ] } ],\n                                                        "annots":\n                                                          [ "%change_keys" ] } ],\n                                                  "annots": [ ":action" ] } ],\n                                            "annots": [ ":payload" ] },\n                                          { "prim": "list",\n                                            "args":\n                                              [ { "prim": "option",\n                                                  "args":\n                                                    [ { "prim": "signature" } ] } ],\n                                            "annots": [ "%sigs" ] } ],\n                                      "annots": [ "%main" ] } ] } ] },\n                        { "prim": "storage",\n                          "args":\n                            [ { "prim": "pair",\n                                "args":\n                                  [ { "prim": "nat",\n                                      "annots": [ "%stored_counter" ] },\n                                    { "prim": "pair",\n                                      "args":\n                                        [ { "prim": "nat",\n                                            "annots": [ "%threshold" ] },\n                                          { "prim": "list",\n                                            "args": [ { "prim": "key" } ],\n                                            "annots": [ "%keys" ] } ] } ] } ] },\n                        { "prim": "code",\n                          "args":\n                            [ [ [ [ { "prim": "DUP" }, { "prim": "CAR" },\n                                    { "prim": "DIP",\n                                      "args": [ [ { "prim": "CDR" } ] ] } ] ],\n                                { "prim": "IF_LEFT",\n                                  "args":\n                                    [ [ { "prim": "DROP" },\n                                        { "prim": "NIL",\n                                          "args": [ { "prim": "operation" } ] },\n                                        { "prim": "PAIR" } ],\n                                      [ { "prim": "PUSH",\n                                          "args":\n                                            [ { "prim": "mutez" },\n                                              { "int": "0" } ] },\n                                        { "prim": "AMOUNT" },\n                                        [ [ { "prim": "COMPARE" },\n                                            { "prim": "EQ" } ],\n                                          { "prim": "IF",\n                                            "args":\n                                              [ [],\n                                                [ [ { "prim": "UNIT" },\n                                                    { "prim": "FAILWITH" } ] ] ] } ],\n                                        { "prim": "SWAP" }, { "prim": "DUP" },\n                                        { "prim": "DIP",\n                                          "args": [ [ { "prim": "SWAP" } ] ] },\n                                        { "prim": "DIP",\n                                          "args":\n                                            [ [ [ [ { "prim": "DUP" },\n                                                    { "prim": "CAR" },\n                                                    { "prim": "DIP",\n                                                      "args":\n                                                        [ [ { "prim": "CDR" } ] ] } ] ],\n                                                { "prim": "DUP" },\n                                                { "prim": "SELF" },\n                                                { "prim": "ADDRESS" },\n                                                { "prim": "PAIR" },\n                                                { "prim": "PACK" },\n                                                { "prim": "DIP",\n                                                  "args":\n                                                    [ [ [ [ { "prim": "DUP" },\n                                                            { "prim": "CAR",\n                                                              "annots":\n                                                                [ "@counter" ] },\n                                                            { "prim": "DIP",\n                                                              "args":\n                                                                [ [ { "prim":\n                                                                        "CDR" } ] ] } ] ],\n                                                        { "prim": "DIP",\n                                                          "args":\n                                                            [ [ { "prim": "SWAP" } ] ] } ] ] },\n                                                { "prim": "SWAP" } ] ] },\n                                        [ [ { "prim": "DUP" },\n                                            { "prim": "CAR",\n                                              "annots": [ "@stored_counter" ] },\n                                            { "prim": "DIP",\n                                              "args": [ [ { "prim": "CDR" } ] ] } ] ],\n                                        { "prim": "DIP",\n                                          "args": [ [ { "prim": "SWAP" } ] ] },\n                                        [ [ { "prim": "COMPARE" },\n                                            { "prim": "EQ" } ],\n                                          { "prim": "IF",\n                                            "args":\n                                              [ [],\n                                                [ [ { "prim": "UNIT" },\n                                                    { "prim": "FAILWITH" } ] ] ] } ],\n                                        { "prim": "DIP",\n                                          "args": [ [ { "prim": "SWAP" } ] ] },\n                                        [ [ { "prim": "DUP" },\n                                            { "prim": "CAR",\n                                              "annots": [ "@threshold" ] },\n                                            { "prim": "DIP",\n                                              "args":\n                                                [ [ { "prim": "CDR",\n                                                      "annots": [ "@keys" ] } ] ] } ] ],\n                                        { "prim": "DIP",\n                                          "args":\n                                            [ [ { "prim": "PUSH",\n                                                  "args":\n                                                    [ { "prim": "nat" },\n                                                      { "int": "0" } ],\n                                                  "annots": [ "@valid" ] },\n                                                { "prim": "SWAP" },\n                                                { "prim": "ITER",\n                                                  "args":\n                                                    [ [ { "prim": "DIP",\n                                                          "args":\n                                                            [ [ { "prim": "SWAP" } ] ] },\n                                                        { "prim": "SWAP" },\n                                                        { "prim": "IF_CONS",\n                                                          "args":\n                                                            [ [ [ { "prim":\n                                                                      "IF_NONE",\n                                                                    "args":\n                                                                      [ [ { "prim":\n                                                                        "SWAP" },\n                                                                        { "prim":\n                                                                        "DROP" } ],\n                                                                        [ { "prim":\n                                                                        "SWAP" },\n                                                                        { "prim":\n                                                                        "DIP",\n                                                                        "args":\n                                                                        [ [ { "prim":\n                                                                        "SWAP" },\n                                                                        { "prim":\n                                                                        "DIP",\n                                                                        "args":\n                                                                        [ { "int":\n                                                                        "2" },\n                                                                        [ [ { "prim":\n                                                                        "DIP",\n                                                                        "args":\n                                                                        [ [ { "prim":\n                                                                        "DUP" } ] ] },\n                                                                        { "prim":\n                                                                        "SWAP" } ] ] ] },\n                                                                        [ [ { "prim":\n                                                                        "DIP",\n                                                                        "args":\n                                                                        [ { "int":\n                                                                        "2" },\n                                                                        [ { "prim":\n                                                                        "DUP" } ] ] },\n                                                                        { "prim":\n                                                                        "DIG",\n                                                                        "args":\n                                                                        [ { "int":\n                                                                        "3" } ] } ],\n                                                                        { "prim":\n                                                                        "DIP",\n                                                                        "args":\n                                                                        [ [ { "prim":\n                                                                        "CHECK_SIGNATURE" } ] ] },\n                                                                        { "prim":\n                                                                        "SWAP" },\n                                                                        { "prim":\n                                                                        "IF",\n                                                                        "args":\n                                                                        [ [ { "prim":\n                                                                        "DROP" } ],\n                                                                        [ { "prim":\n                                                                        "FAILWITH" } ] ] } ],\n                                                                        { "prim":\n                                                                        "PUSH",\n                                                                        "args":\n                                                                        [ { "prim":\n                                                                        "nat" },\n                                                                        { "int":\n                                                                        "1" } ] },\n                                                                        { "prim":\n                                                                        "ADD",\n                                                                        "annots":\n                                                                        [ "@valid" ] } ] ] } ] ] } ] ],\n                                                              [ [ { "prim":\n                                                                      "UNIT" },\n                                                                  { "prim":\n                                                                      "FAILWITH" } ] ] ] },\n                                                        { "prim": "SWAP" } ] ] } ] ] },\n                                        [ [ { "prim": "COMPARE" },\n                                            { "prim": "LE" } ],\n                                          { "prim": "IF",\n                                            "args":\n                                              [ [],\n                                                [ [ { "prim": "UNIT" },\n                                                    { "prim": "FAILWITH" } ] ] ] } ],\n                                        { "prim": "IF_CONS",\n                                          "args":\n                                            [ [ [ { "prim": "UNIT" },\n                                                  { "prim": "FAILWITH" } ] ],\n                                              [] ] }, { "prim": "DROP" },\n                                        { "prim": "DIP",\n                                          "args":\n                                            [ [ [ [ { "prim": "DUP" },\n                                                    { "prim": "CAR" },\n                                                    { "prim": "DIP",\n                                                      "args":\n                                                        [ [ { "prim": "CDR" } ] ] } ] ],\n                                                { "prim": "PUSH",\n                                                  "args":\n                                                    [ { "prim": "nat" },\n                                                      { "int": "1" } ] },\n                                                { "prim": "ADD",\n                                                  "annots": [ "@new_counter" ] },\n                                                { "prim": "PAIR" } ] ] },\n                                        { "prim": "IF_LEFT",\n                                          "args":\n                                            [ [ { "prim": "UNIT" },\n                                                { "prim": "EXEC" } ],\n                                              [ { "prim": "DIP",\n                                                  "args":\n                                                    [ [ { "prim": "CAR" } ] ] },\n                                                { "prim": "SWAP" },\n                                                { "prim": "PAIR" },\n                                                { "prim": "NIL",\n                                                  "args":\n                                                    [ { "prim": "operation" } ] } ] ] },\n                                        { "prim": "PAIR" } ] ] } ] ] } ],\n                    "storage":\n                      { "prim": "Pair",\n                        "args":\n                          [ { "int": "0" },\n                            { "prim": "Pair",\n                              "args":\n                                [ { "int": "1" },\n                                  [ { "string":\n                                        "edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t" } ] ] } ] } } } ] }\n  Operation: ...\n  Operation hash is \'onxq1z9wN753NSwanK2D41kifFUbU54vWu4aiQLH2gvTSRBEdrJ\'\n  Simulation result:\n  Manager signed operations:\n    From: tz1QZ6KY7d3BuZDT1d19dUxoQrtFPN2QJ3hn\n    Fee to the baker: \ua7290.004471\n    Expected counter: 25184\n    Gas limit: 32618\n    Storage limit: 1233 bytes\n    Balance updates:\n      tz1QZ6KY7d3BuZDT1d19dUxoQrtFPN2QJ3hn ............ -\ua7290.004471\n      fees(tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU,58) ... +\ua7290.004471\n    Origination:\n      From: tz1QZ6KY7d3BuZDT1d19dUxoQrtFPN2QJ3hn\n      Credit: \ua7291\n      Script:\n        { parameter\n            (or (unit %default)\n                (pair %main\n                   (pair :payload\n                      (nat %counter)\n                      (or :action\n                         (lambda %operation unit (list operation))\n                         (pair %change_keys (nat %threshold) (list %keys key))))\n                   (list %sigs (option signature)))) ;\n          storage (pair (nat %stored_counter) (pair (nat %threshold) (list %keys key))) ;\n          code { UNPAIR ;\n                 IF_LEFT\n                   { DROP ; NIL operation ; PAIR }\n                   { PUSH mutez 0 ;\n                     AMOUNT ;\n                     ASSERT_CMPEQ ;\n                     SWAP ;\n                     DUP ;\n                     DIP { SWAP } ;\n                     DIP { UNPAIR ;\n                           DUP ;\n                           SELF ;\n                           ADDRESS ;\n                           PAIR ;\n                           PACK ;\n                           DIP { { { DUP ; CAR @counter ; DIP { CDR } } } ; DIP { SWAP } } ;\n                           SWAP } ;\n                     { { DUP ; CAR @stored_counter ; DIP { CDR } } } ;\n                     DIP { SWAP } ;\n                     ASSERT_CMPEQ ;\n                     DIP { SWAP } ;\n                     { { DUP ; CAR @threshold ; DIP { CDR @keys } } } ;\n                     DIP { PUSH @valid nat 0 ;\n                           SWAP ;\n                           ITER { DIP { SWAP } ;\n                                  SWAP ;\n                                  IF_CONS\n                                    { IF_SOME\n                                        { SWAP ;\n                                          DIP { SWAP ;\n                                                DIP 2 { DUP 2 } ;\n                                                { DUP 3 ;\n                                                  DIP { CHECK_SIGNATURE } ;\n                                                  SWAP ;\n                                                  IF { DROP } { FAILWITH } } ;\n                                                PUSH nat 1 ;\n                                                ADD @valid } }\n                                        { SWAP ; DROP } }\n                                    { FAIL } ;\n                                  SWAP } } ;\n                     ASSERT_CMPLE ;\n                     IF_CONS { FAIL } {} ;\n                     DROP ;\n                     DIP { UNPAIR ; PUSH nat 1 ; ADD @new_counter ; PAIR } ;\n                     IF_LEFT { UNIT ; EXEC } { DIP { CAR } ; SWAP ; PAIR ; NIL operation } ;\n                     PAIR } } }\n        Initial storage:\n          (Pair 0 (Pair 1 { "edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t" }))\n        No delegate for this contract\n        This origination was successfully applied\n        Originated contracts:\n          KT1Fe71jyjrxFg9ZrYqtvaX7uQjcLo7svE4D\n        Storage size: 956 bytes\n        Paid storage size diff: 956 bytes\n        Consumed gas: 32518\n        Balance updates:\n          tz1QZ6KY7d3BuZDT1d19dUxoQrtFPN2QJ3hn ... -\ua7290.956\n          tz1QZ6KY7d3BuZDT1d19dUxoQrtFPN2QJ3hn ... -\ua7290.257\n          tz1QZ6KY7d3BuZDT1d19dUxoQrtFPN2QJ3hn ... -\ua7291\n          KT1Fe71jyjrxFg9ZrYqtvaX7uQjcLo7svE4D ... +\ua7291\n')),Object(a.b)("p",null,"From the output generated by ",Object(a.b)("inlineCode",{parentName:"p"},"tezos-client")," command, you need to copy the michelson (represented in JSON form) that appears under the ",Object(a.b)("inlineCode",{parentName:"p"},"code:")," json property."),Object(a.b)("p",null,"You need to take this JSON and put it in a file named ",Object(a.b)("inlineCode",{parentName:"p"},"generic.json"),". We will then read the ",Object(a.b)("inlineCode",{parentName:"p"},"generic.json")," file in the following Taquito example."),Object(a.b)("p",null,"Here's the same json from above, but copied to stand on its own."),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'\n[ { "prim": "parameter",\n    "args":\n      [ { "prim": "or",\n          "args":\n            [ { "prim": "unit", "annots": [ "%default" ] },\n              { "prim": "pair",\n                "args":\n                  [ { "prim": "pair",\n                      "args":\n                        [ { "prim": "nat",\n                            "annots": [ "%counter" ] },\n                          { "prim": "or",\n                            "args":\n                              [ { "prim": "lambda",\n                                  "args":\n                                    [ { "prim": "unit" },\n                                      { "prim": "list",\n                                        "args":\n                                          [ { "prim":\n                                                "operation" } ] } ],\n                                  "annots":\n                                    [ "%operation" ] },\n                                { "prim": "pair",\n                                  "args":\n                                    [ { "prim": "nat",\n                                        "annots":\n                                          [ "%threshold" ] },\n                                      { "prim": "list",\n                                        "args":\n                                          [ { "prim": "key" } ],\n                                        "annots":\n                                          [ "%keys" ] } ],\n                                  "annots":\n                                    [ "%change_keys" ] } ],\n                            "annots": [ ":action" ] } ],\n                      "annots": [ ":payload" ] },\n                    { "prim": "list",\n                      "args":\n                        [ { "prim": "option",\n                            "args":\n                              [ { "prim": "signature" } ] } ],\n                      "annots": [ "%sigs" ] } ],\n                "annots": [ "%main" ] } ] } ] },\n  { "prim": "storage",\n    "args":\n      [ { "prim": "pair",\n          "args":\n            [ { "prim": "nat",\n                "annots": [ "%stored_counter" ] },\n              { "prim": "pair",\n                "args":\n                  [ { "prim": "nat",\n                      "annots": [ "%threshold" ] },\n                    { "prim": "list",\n                      "args": [ { "prim": "key" } ],\n                      "annots": [ "%keys" ] } ] } ] } ] },\n  { "prim": "code",\n    "args":\n      [ [ [ [ { "prim": "DUP" }, { "prim": "CAR" },\n              { "prim": "DIP",\n                "args": [ [ { "prim": "CDR" } ] ] } ] ],\n          { "prim": "IF_LEFT",\n            "args":\n              [ [ { "prim": "DROP" },\n                  { "prim": "NIL",\n                    "args": [ { "prim": "operation" } ] },\n                  { "prim": "PAIR" } ],\n                [ { "prim": "PUSH",\n                    "args":\n                      [ { "prim": "mutez" },\n                        { "int": "0" } ] },\n                  { "prim": "AMOUNT" },\n                  [ [ { "prim": "COMPARE" },\n                      { "prim": "EQ" } ],\n                    { "prim": "IF",\n                      "args":\n                        [ [],\n                          [ [ { "prim": "UNIT" },\n                              { "prim": "FAILWITH" } ] ] ] } ],\n                  { "prim": "SWAP" }, { "prim": "DUP" },\n                  { "prim": "DIP",\n                    "args": [ [ { "prim": "SWAP" } ] ] },\n                  { "prim": "DIP",\n                    "args":\n                      [ [ [ [ { "prim": "DUP" },\n                              { "prim": "CAR" },\n                              { "prim": "DIP",\n                                "args":\n                                  [ [ { "prim": "CDR" } ] ] } ] ],\n                          { "prim": "DUP" },\n                          { "prim": "SELF" },\n                          { "prim": "ADDRESS" },\n                          { "prim": "PAIR" },\n                          { "prim": "PACK" },\n                          { "prim": "DIP",\n                            "args":\n                              [ [ [ [ { "prim": "DUP" },\n                                      { "prim": "CAR",\n                                        "annots":\n                                          [ "@counter" ] },\n                                      { "prim": "DIP",\n                                        "args":\n                                          [ [ { "prim":\n                                                  "CDR" } ] ] } ] ],\n                                  { "prim": "DIP",\n                                    "args":\n                                      [ [ { "prim": "SWAP" } ] ] } ] ] },\n                          { "prim": "SWAP" } ] ] },\n                  [ [ { "prim": "DUP" },\n                      { "prim": "CAR",\n                        "annots": [ "@stored_counter" ] },\n                      { "prim": "DIP",\n                        "args": [ [ { "prim": "CDR" } ] ] } ] ],\n                  { "prim": "DIP",\n                    "args": [ [ { "prim": "SWAP" } ] ] },\n                  [ [ { "prim": "COMPARE" },\n                      { "prim": "EQ" } ],\n                    { "prim": "IF",\n                      "args":\n                        [ [],\n                          [ [ { "prim": "UNIT" },\n                              { "prim": "FAILWITH" } ] ] ] } ],\n                  { "prim": "DIP",\n                    "args": [ [ { "prim": "SWAP" } ] ] },\n                  [ [ { "prim": "DUP" },\n                      { "prim": "CAR",\n                        "annots": [ "@threshold" ] },\n                      { "prim": "DIP",\n                        "args":\n                          [ [ { "prim": "CDR",\n                                "annots": [ "@keys" ] } ] ] } ] ],\n                  { "prim": "DIP",\n                    "args":\n                      [ [ { "prim": "PUSH",\n                            "args":\n                              [ { "prim": "nat" },\n                                { "int": "0" } ],\n                            "annots": [ "@valid" ] },\n                          { "prim": "SWAP" },\n                          { "prim": "ITER",\n                            "args":\n                              [ [ { "prim": "DIP",\n                                    "args":\n                                      [ [ { "prim": "SWAP" } ] ] },\n                                  { "prim": "SWAP" },\n                                  { "prim": "IF_CONS",\n                                    "args":\n                                      [ [ [ { "prim":\n                                                "IF_NONE",\n                                              "args":\n                                                [ [ { "prim":\n                                                  "SWAP" },\n                                                  { "prim":\n                                                  "DROP" } ],\n                                                  [ { "prim":\n                                                  "SWAP" },\n                                                  { "prim":\n                                                  "DIP",\n                                                  "args":\n                                                  [ [ { "prim":\n                                                  "SWAP" },\n                                                  { "prim":\n                                                  "DIP",\n                                                  "args":\n                                                  [ { "int":\n                                                  "2" },\n                                                  [ [ { "prim":\n                                                  "DIP",\n                                                  "args":\n                                                  [ [ { "prim":\n                                                  "DUP" } ] ] },\n                                                  { "prim":\n                                                  "SWAP" } ] ] ] },\n                                                  [ [ { "prim":\n                                                  "DIP",\n                                                  "args":\n                                                  [ { "int":\n                                                  "2" },\n                                                  [ { "prim":\n                                                  "DUP" } ] ] },\n                                                  { "prim":\n                                                  "DIG",\n                                                  "args":\n                                                  [ { "int":\n                                                  "3" } ] } ],\n                                                  { "prim":\n                                                  "DIP",\n                                                  "args":\n                                                  [ [ { "prim":\n                                                  "CHECK_SIGNATURE" } ] ] },\n                                                  { "prim":\n                                                  "SWAP" },\n                                                  { "prim":\n                                                  "IF",\n                                                  "args":\n                                                  [ [ { "prim":\n                                                  "DROP" } ],\n                                                  [ { "prim":\n                                                  "FAILWITH" } ] ] } ],\n                                                  { "prim":\n                                                  "PUSH",\n                                                  "args":\n                                                  [ { "prim":\n                                                  "nat" },\n                                                  { "int":\n                                                  "1" } ] },\n                                                  { "prim":\n                                                  "ADD",\n                                                  "annots":\n                                                  [ "@valid" ] } ] ] } ] ] } ] ],\n                                        [ [ { "prim":\n                                                "UNIT" },\n                                            { "prim":\n                                                "FAILWITH" } ] ] ] },\n                                  { "prim": "SWAP" } ] ] } ] ] },\n                  [ [ { "prim": "COMPARE" },\n                      { "prim": "LE" } ],\n                    { "prim": "IF",\n                      "args":\n                        [ [],\n                          [ [ { "prim": "UNIT" },\n                              { "prim": "FAILWITH" } ] ] ] } ],\n                  { "prim": "IF_CONS",\n                    "args":\n                      [ [ [ { "prim": "UNIT" },\n                            { "prim": "FAILWITH" } ] ],\n                        [] ] }, { "prim": "DROP" },\n                  { "prim": "DIP",\n                    "args":\n                      [ [ [ [ { "prim": "DUP" },\n                              { "prim": "CAR" },\n                              { "prim": "DIP",\n                                "args":\n                                  [ [ { "prim": "CDR" } ] ] } ] ],\n                          { "prim": "PUSH",\n                            "args":\n                              [ { "prim": "nat" },\n                                { "int": "1" } ] },\n                          { "prim": "ADD",\n                            "annots": [ "@new_counter" ] },\n                          { "prim": "PAIR" } ] ] },\n                  { "prim": "IF_LEFT",\n                    "args":\n                      [ [ { "prim": "UNIT" },\n                          { "prim": "EXEC" } ],\n                        [ { "prim": "DIP",\n                            "args":\n                              [ [ { "prim": "CAR" } ] ] },\n                          { "prim": "SWAP" },\n                          { "prim": "PAIR" },\n                          { "prim": "NIL",\n                            "args":\n                              [ { "prim": "operation" } ] } ] ] },\n                  { "prim": "PAIR" } ] ] } ] ] } ]\n')),Object(a.b)("h2",{id:"originate-the-contract-using-taquito"},"Originate the contract using Taquito"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Note: This requires a signer to be configured, ie: ",Object(a.b)("inlineCode",{parentName:"p"},'Tezos.importKey("p2sk2obfVMEuPUnadAConLWk7Tf4Dt3n4svSgJwrgpamRqJXvaYcg1")'))),Object(a.b)("p",null,"Here are two examples of the origination of the contract from Taquito. The first example initializes the contracts storage using a familiar looking javascript object. The second demonstrates the use of michelson in JSON representation. The first method is preferred, but if you have a reason to circumvent the convenient storage API you can do so (please report bugs with examples!)"),Object(a.b)("h3",{id:"a-using-the-storage-encoder-feature"},"a. Using the storage encoder feature"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"// generic.json is referring to the JSON array that we extracted from the `tezos-cli` output earlier\n// The same type output may have been generated by a compiler such as ligo (see ligos output\n// options).\nconst genericMultisigJSON = require('./generic.json')\n\nconst originationOp = await Tezos.contract.originate({\n  code: genericMultisigJSON,\n  storage: {\n    stored_counter: 0,\n    threshold: 1,\n    keys: ['edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t']\n  }\n})\n\nconst contract = await originationOp.contract()\nconsole.log(contract.address)\n")),Object(a.b)("h3",{id:"b-using-the-json-storage"},"b. Using the JSON storage"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'// generic.json is referring to the JSON array that we extracted from the `tezos-cli` output earlier\n// The same type output may have been generated by a compiler such as ligo (see ligos output\n// options).\nconst genericMultisigJSON = require(\'./generic.json\')\n\nconst originationOp = await Tezos.contract.originate({\n  code: genericMultisigJSON,\n  init: { "prim": "Pair",\n                        "args":\n                          [ { "int": "0" },\n                            { "prim": "Pair",\n                              "args":\n                                [ { "int": "1" },\n                                  [ { "string":\n                                        "edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t" } ] ] } ] }\n})\n\nconst contract = await originationOp.contract()\nconsole.log(contract.address)\n')))}c.isMDXComponent=!0},160:function(n,r,e){"use strict";e.d(r,"a",(function(){return g})),e.d(r,"b",(function(){return P}));var t=e(0),i=e.n(t);function a(n,r,e){return r in n?Object.defineProperty(n,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[r]=e,n}function o(n,r){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(n,r).enumerable}))),e.push.apply(e,t)}return e}function p(n){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?o(Object(e),!0).forEach((function(r){a(n,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(r){Object.defineProperty(n,r,Object.getOwnPropertyDescriptor(e,r))}))}return n}function s(n,r){if(null==n)return{};var e,t,i=function(n,r){if(null==n)return{};var e,t,i={},a=Object.keys(n);for(t=0;t<a.length;t++)e=a[t],r.indexOf(e)>=0||(i[e]=n[e]);return i}(n,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(t=0;t<a.length;t++)e=a[t],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var m=i.a.createContext({}),c=function(n){var r=i.a.useContext(m),e=r;return n&&(e="function"==typeof n?n(r):p(p({},r),n)),e},g=function(n){var r=c(n.components);return i.a.createElement(m.Provider,{value:r},n.children)},l={inlineCode:"code",wrapper:function(n){var r=n.children;return i.a.createElement(i.a.Fragment,{},r)}},u=i.a.forwardRef((function(n,r){var e=n.components,t=n.mdxType,a=n.originalType,o=n.parentName,m=s(n,["components","mdxType","originalType","parentName"]),g=c(e),u=t,P=g["".concat(o,".").concat(u)]||g[u]||l[u]||a;return e?i.a.createElement(P,p(p({ref:r},m),{},{components:e})):i.a.createElement(P,p({ref:r},m))}));function P(n,r){var e=arguments,t=r&&r.mdxType;if("string"==typeof n||t){var a=e.length,o=new Array(a);o[0]=u;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=n,p.mdxType="string"==typeof n?n:t,o[1]=p;for(var m=2;m<a;m++)o[m]=e[m];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,e)}u.displayName="MDXCreateElement"}}]);